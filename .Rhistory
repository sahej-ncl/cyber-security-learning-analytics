csv_files  = list.files(path="data",pattern = '*_leaving-survey-responses.csv', full.names = TRUE)
csv_files
#read files into a list
Merge <- lapply(csv_files, read.csv, header = TRUE)
Merge
#Using rbind to combine files
Final_data <- do.call(rbind , Merge)
Final_data
#Deleting records where the Leaving reason is "Prefer not say".
Final_data<-Final_data[!(Final_data$leaving_reason=="I prefer not to say"),]
Final_data
#Removing_NA_records
Final_data <- na.omit(Final_data)
#Making data in readable format
Final_data["leaving_reason"][Final_data["leaving_reason"] == "The course wasnâ€™️t what I expected"] <- "The course wasn't what I expected"
Final_data["leaving_reason"][Final_data["leaving_reason"] == "I donâ€™️t have enough time"] <- "I don't have enough time"
Final_data["leaving_reason"][Final_data["leaving_reason"] == "The course wonâ€™️t help me reach my goals"] <- "The course won't help me reach my goals"
Final_data
#Converting table to data frame and calculating percentage of Leaving_reason variable
Data_reason <- Final_data %>%
group_by(leaving_reason) %>% # Variable to be transformed
count() %>%
ungroup() %>%
mutate(perc = `n` / sum(`n`)) %>%
arrange(perc) %>%
mutate(labels = scales::percent(perc))
load.project()
install.packages("ProjectTemplate")
install.packages("dplyr")
library(ggplot2)
library(ProjectTemplate)
#setwd("~/sahej eda/EDA")
load.project()
#--------------------------------------------------------------------------------------------------------------------------------------------------
#Relation between Step_position(title) vs total view
# video stats 3
#Finding the relation between step position and total view using the correlation function for video stat3
cortop9 <- cor(cyber.security.3_video.stats[,1],cyber.security.3_video.stats[,4])
cortop9
#plotting the graph for step_position vs total_views
plot9 = ggplot(cyber.security.3_video.stats, aes(step_position,total_views, color = title, size = total_views)) + geom_point() +
ggtitle("Analysis of total users based on total downloads of the modules v3")
plot9
# video stats 4
#Finding the relation between step position and total view using the correlation function for video stat4
cortop10 <- cor(cyber.security.4_video.stats[,1],cyber.security.4_video.stats[,4])
cortop10
#plotting the graph for step_position vs total_views
plot10 = ggplot(cyber.security.4_video.stats, aes(step_position,total_views, color = title, size = total_views)) + geom_point() +
ggtitle("Analysis of total users based on total downloads of the modules v4")
plot10
# video stats 5
#Finding the relation between step position and total view using the correlation function for video stat5
cortop11 <- cor(cyber.security.5_video.stats[,1],cyber.security.5_video.stats[,4])
cortop11
#plotting the graph for step_position vs total_views
plot11 = ggplot(cyber.security.5_video.stats, aes(step_position,total_views, color = title, size = total_views)) + geom_point() +
ggtitle("relation between total views vs title v5")
plot11
#--------------------------------------------------------------------------------------------------------------------------------------------------
#Relation between total views and duration of the video
# video stats 3
#Finding the relation between total views and duration of the video for video stat3 using correlation function
cortop9 <- cor(cyber.security.3_video.stats[,1],cyber.security.3_video.stats[,4])
cortop9
#plotting the graph for the title vs total view
plot9 = ggplot(cyber.security.3_video.stats, aes(step_position,total_views, color = title, size = total_views)) + geom_point() +
ggtitle("Analysis of total users based on total downloads of the modules v3")
plot9
# video stats 4
#Finding the relation between total views and duration of the video for video stat4
cortop10 <- cor(cyber.security.4_video.stats[,1],cyber.security.4_video.stats[,4])
cortop10
#plotting the graph for the title vs total view
plot10 = ggplot(cyber.security.4_video.stats, aes(step_position,total_views, color = title, size = total_views)) + geom_point() +
ggtitle("Analysis of total users based on total downloads of the modules v4")
plot10
# video stats 5
#Finding the relation between total views and duration of the video for video stat5
cortop11 <- cor(cyber.security.5_video.stats[,1],cyber.security.5_video.stats[,4])
cortop11
#plotting the graph for the title vs total view
plot11 = ggplot(cyber.security.5_video.stats, aes(step_position,total_views, color = title, size = total_views)) + geom_point() +
ggtitle("relation between total views vs title v5")
plot11
#--------------------------------------------------------------------------------------------------------------------------------------------------
#Relation between total views and viewed_onehundred_percent
# Video Stats for combined data of video stats 4 and 5
cortop12 <- cor(videostats4and5[,4],videostats4and5[,15])
cortop12
#.0        he graph for the viewed_onehundred_percent vs total view
plot12 = ggplot(videostats4and5, aes(viewed_onehundred_percent,total_views, color = viewed_onehundred_percent, size = total_views)) + geom_point() +
ggtitle("relation between total views and viewed_onehundred_percent v3")
plot12
#--------------------------------------------------------------------------------------------------------------------------------------------------
#Leaving data
#The Most and Least common reason to leave the course.
#Pie chart creation
Pie_graph = ggplot(Data_reason, aes(x = "", y = perc, fill = leaving_reason)) +
geom_col() +  coord_polar(theta = "y") + geom_label(aes(label = labels),
position = position_stack(vjust = 0.5),
show.legend = FALSE) + theme_void()
#plotting the pie graph
Pie_graph
vgb#Comparing the 100%total view and The Most and Least common reason to leave the course
#plotting a pie graph
ggplot()
.
install.packages("dplyr")
# Example preprocessing script.
install.packages("dplyr")
install.packages("ggplot2")
library(ggplot2)
library(dplyr)
load.project()
#video_stat3 <- read.csv(file= 'C:/Users/Sahej/Documents/sahej eda/EDA/data/cyber-security-3_video-stats.csv')
#video_stat4 <- read.csv(file= 'C:/Users/Sahej/Documents/sahej eda/EDA/data/cyber-security-4_video-stats.csv')
#video_stat5 <- read.csv(file= 'C:/Users/Sahej/Documents/sahej eda/EDA/data/cyber-security-5_video-stats.csv')
#Adding month column in data for September 2017 month
#cyber.security.3_video.stats$Month<-"September,2017"
#Adding month column in data for November 2017 month
#cyber.security.4_video.stats$Month<-"November,2017"
#Adding month column in data for Febuary 2018 month
#cyber.security.5_video.stats$Month<-"Febuary,2018"
#Merging data from september 2017 and november 2017
#Merge1=merge(cyber.security.4_video.stats, cyber.security.5_video.stats, by='step_position', all = TRUE)
#combining video stats data 4 and 5
videostats4and5 <- rbind(cyber.security.4_video.stats, cyber.security.5_video.stats)
#("Combined by rows: ", "\n")
videostats4and5
#combining leaving data response 4 and 5
#Final_data <- rbind(cyber-security-4_leaving-survey-responses, cyber-security-5_leaving-survey-responses)
#cat("Combined by rows: ", "\n")
#Final_data
#Leaving Data
#Using the answer from here [Importing several files and indexing them ]
csv_files  = list.files(path="data",pattern = '*_leaving-survey-responses.csv', full.names = TRUE)
csv_files
#read files into a list
Merge <- lapply(csv_files, read.csv, header = TRUE)
Merge
#Using rbind to combine files
Final_data <- do.call(rbind , Merge)
Final_data
#Deleting records where the Leaving reason is "Prefer not say".
Final_data<-Final_data[!(Final_data$leaving_reason=="I prefer not to say"),]
Final_data
#Removing_NA_records
Final_data <- na.omit(Final_data)
#Making data in readable format
Final_data["leaving_reason"][Final_data["leaving_reason"] == "The course wasnâ€™️t what I expected"] <- "The course wasn't what I expected"
Final_data["leaving_reason"][Final_data["leaving_reason"] == "I donâ€™️t have enough time"] <- "I don't have enough time"
Final_data["leaving_reason"][Final_data["leaving_reason"] == "The course wonâ€™️t help me reach my goals"] <- "The course won't help me reach my goals"
Final_data
#Converting table to data frame and calculating percentage of Leaving_reason variable
Data_reason <- Final_data %>%
group_by(leaving_reason) %>% # Variable to be transformed
count() %>%
ungroup() %>%
mutate(perc = `n` / sum(`n`)) %>%
arrange(perc) %>%
mutate(labels = scales::percent(perc))
install.packages("dplyr")
install.packages("ggplot2")
install.packages("ProjectTemplate")
install.packages("dplyr")
library(ggplot2)
library(ProjectTemplate)
#setwd("~/sahej eda/EDA")
load.project()
#--------------------------------------------------------------------------------------------------------------------------------------------------
#Relation between Step_position(title) vs total view
# video stats 3
#Finding the relation between step position and total view using the correlation function for video stat3
cortop9 <- cor(cyber.security.3_video.stats[,1],cyber.security.3_video.stats[,4])
cortop9
#plotting the graph for step_position vs total_views
plot9 = ggplot(cyber.security.3_video.stats, aes(step_position,total_views, color = title, size = total_views)) + geom_point() +
ggtitle("Analysis of total users based on total downloads of the modules v3")
plot9
# video stats 4
#Finding the relation between step position and total view using the correlation function for video stat4
cortop10 <- cor(cyber.security.4_video.stats[,1],cyber.security.4_video.stats[,4])
cortop10
#plotting the graph for step_position vs total_views
plot10 = ggplot(cyber.security.4_video.stats, aes(step_position,total_views, color = title, size = total_views)) + geom_point() +
ggtitle("Analysis of total users based on total downloads of the modules v4")
plot10
# video stats 5
#Finding the relation between step position and total view using the correlation function for video stat5
cortop11 <- cor(cyber.security.5_video.stats[,1],cyber.security.5_video.stats[,4])
cortop11
#plotting the graph for step_position vs total_views
plot11 = ggplot(cyber.security.5_video.stats, aes(step_position,total_views, color = title, size = total_views)) + geom_point() +
ggtitle("relation between total views vs title v5")
plot11
#--------------------------------------------------------------------------------------------------------------------------------------------------
#Relation between total views and duration of the video
# video stats 3
#Finding the relation between total views and duration of the video for video stat3 using correlation function
cortop9 <- cor(cyber.security.3_video.stats[,1],cyber.security.3_video.stats[,4])
cortop9
#plotting the graph for the title vs total view
plot9 = ggplot(cyber.security.3_video.stats, aes(step_position,total_views, color = title, size = total_views)) + geom_point() +
ggtitle("Analysis of total users based on total downloads of the modules v3")
plot9
# video stats 4
#Finding the relation between total views and duration of the video for video stat4
cortop10 <- cor(cyber.security.4_video.stats[,1],cyber.security.4_video.stats[,4])
cortop10
#plotting the graph for the title vs total view
plot10 = ggplot(cyber.security.4_video.stats, aes(step_position,total_views, color = title, size = total_views)) + geom_point() +
ggtitle("Analysis of total users based on total downloads of the modules v4")
plot10
# video stats 5
#Finding the relation between total views and duration of the video for video stat5
cortop11 <- cor(cyber.security.5_video.stats[,1],cyber.security.5_video.stats[,4])
cortop11
#plotting the graph for the title vs total view
plot11 = ggplot(cyber.security.5_video.stats, aes(step_position,total_views, color = title, size = total_views)) + geom_point() +
ggtitle("relation between total views vs title v5")
plot11
#--------------------------------------------------------------------------------------------------------------------------------------------------
#Relation between total views and viewed_onehundred_percent
# Video Stats for combined data of video stats 4 and 5
cortop12 <- cor(videostats4and5[,4],videostats4and5[,15])
cortop12
#.0        he graph for the viewed_onehundred_percent vs total view
plot12 = ggplot(videostats4and5, aes(viewed_onehundred_percent,total_views, color = viewed_onehundred_percent, size = total_views)) + geom_point() +
ggtitle("relation between total views and viewed_onehundred_percent v3")
plot12
#--------------------------------------------------------------------------------------------------------------------------------------------------
#Leaving data
#The Most and Least common reason to leave the course.
#Pie chart creation
Pie_graph = ggplot(Data_reason, aes(x = "", y = perc, fill = leaving_reason)) +
geom_col() +  coord_polar(theta = "y") + geom_label(aes(label = labels),
position = position_stack(vjust = 0.5),
show.legend = FALSE) + theme_void()
#plotting the pie graph
Pie_graph
vgb#Comparing the 100%total view and The Most and Least common reason to leave the course
#plotting a pie graph
ggplot()
.
install.packages("ProjectTemplate")
install.packages("dplyr")
install.packages("ProjectTemplate")
install.packages("dplyr")
library(ggplot2)
library(ProjectTemplate)
setwd("~/sahej eda/EDA")
load.project()
# Example preprocessing script.
#install.packages("dplyr")
#install.packages("ggplot2")
library(ggplot2)
library(dplyr)
load.project()
#video_stat3 <- read.csv(file= 'C:/Users/Sahej/Documents/sahej eda/EDA/data/cyber-security-3_video-stats.csv')
#video_stat4 <- read.csv(file= 'C:/Users/Sahej/Documents/sahej eda/EDA/data/cyber-security-4_video-stats.csv')
#video_stat5 <- read.csv(file= 'C:/Users/Sahej/Documents/sahej eda/EDA/data/cyber-security-5_video-stats.csv')
#Adding month column in data for September 2017 month
#cyber.security.3_video.stats$Month<-"September,2017"
#Adding month column in data for November 2017 month
#cyber.security.4_video.stats$Month<-"November,2017"
#Adding month column in data for Febuary 2018 month
#cyber.security.5_video.stats$Month<-"Febuary,2018"
#Merging data from september 2017 and november 2017
#Merge1=merge(cyber.security.4_video.stats, cyber.security.5_video.stats, by='step_position', all = TRUE)
#combining video stats data 4 and 5
videostats4and5 <- rbind(cyber.security.4_video.stats, cyber.security.5_video.stats)
#("Combined by rows: ", "\n")
videostats4and5
#combining leaving data response 4 and 5
#Final_data <- rbind(cyber-security-4_leaving-survey-responses, cyber-security-5_leaving-survey-responses)
#cat("Combined by rows: ", "\n")
#Final_data
#Leaving Data
#Using the answer from here [Importing several files and indexing them ]
csv_files  = list.files(path="data",pattern = '*_leaving-survey-responses.csv', full.names = TRUE)
csv_files
#read files into a list
Merge <- lapply(csv_files, read.csv, header = TRUE)
Merge
#Using rbind to combine files
Final_data <- do.call(rbind , Merge)
Final_data
#Deleting records where the Leaving reason is "Prefer not say".
Final_data<-Final_data[!(Final_data$leaving_reason=="I prefer not to say"),]
Final_data
#Removing_NA_records
Final_data <- na.omit(Final_data)
#Making data in readable format
Final_data["leaving_reason"][Final_data["leaving_reason"] == "The course wasn????T???t what I expected"] <- "The course wasn't what I expected"
Final_data["leaving_reason"][Final_data["leaving_reason"] == "I don????T???t have enough time"] <- "I don't have enough time"
Final_data["leaving_reason"][Final_data["leaving_reason"] == "The course won????T???t help me reach my goals"] <- "The course won't help me reach my goals"
Final_data
#Converting table to data frame and calculating percentage of Leaving_reason variable
Data_reason <- Final_data %>%
group_by(leaving_reason) %>% # Variable to be transformed
count() %>%
ungroup() %>%
mutate(perc = `n` / sum(`n`)) %>%
arrange(perc) %>%
mutate(labels = scales::percent(perc))
#install.packages("ProjectTemplate")
#install.packages("dplyr")
library(ggplot2)
library(ProjectTemplate)
setwd("~/sahej eda/EDA")
load.project()
#--------------------------------------------------------------------------------------------------------------------------------------------------
#Relation between Step_position(title) vs total view
# video stats 3
#Finding the relation between step position and total view using the correlation function for video stat3
cortop9 <- cor(cyber.security.3_video.stats[,1],cyber.security.3_video.stats[,4])
cortop9
#plotting the graph for step_position vs total_views
plot9 = ggplot(cyber.security.3_video.stats, aes(step_position,total_views, color = title, size = total_views)) + geom_point() +
ggtitle("Analysis of total users based on total downloads of the modules v3")
plot9
# video stats 4
#Finding the relation between step position and total view using the correlation function for video stat4
cortop10 <- cor(cyber.security.4_video.stats[,1],cyber.security.4_video.stats[,4])
cortop10
#plotting the graph for step_position vs total_views
plot10 = ggplot(cyber.security.4_video.stats, aes(step_position,total_views, color = title, size = total_views)) + geom_point() +
ggtitle("Analysis of total users based on total downloads of the modules v4")
plot10
# video stats 5
#Finding the relation between step position and total view using the correlation function for video stat5
cortop11 <- cor(cyber.security.5_video.stats[,1],cyber.security.5_video.stats[,4])
cortop11
#plotting the graph for step_position vs total_views
plot11 = ggplot(cyber.security.5_video.stats, aes(step_position,total_views, color = title, size = total_views)) + geom_point() +
ggtitle("relation between total views vs title v5")
plot11
#--------------------------------------------------------------------------------------------------------------------------------------------------
#Relation between total views and duration of the video
# video stats 3
#Finding the relation between total views and duration of the video for video stat3 using correlation function
cortop9 <- cor(cyber.security.3_video.stats[,1],cyber.security.3_video.stats[,4])
cortop9
#plotting the graph for the title vs total view
plot9 = ggplot(cyber.security.3_video.stats, aes(step_position,total_views, color = title, size = total_views)) + geom_point() +
ggtitle("Analysis of total users based on total downloads of the modules v3")
plot9
# video stats 4
#Finding the relation between total views and duration of the video for video stat4
cortop10 <- cor(cyber.security.4_video.stats[,1],cyber.security.4_video.stats[,4])
cortop10
#plotting the graph for the title vs total view
plot10 = ggplot(cyber.security.4_video.stats, aes(step_position,total_views, color = title, size = total_views)) + geom_point() +
ggtitle("Analysis of total users based on total downloads of the modules v4")
plot10
# video stats 5
#Finding the relation between total views and duration of the video for video stat5
cortop11 <- cor(cyber.security.5_video.stats[,1],cyber.security.5_video.stats[,4])
cortop11
#plotting the graph for the title vs total view
plot11 = ggplot(cyber.security.5_video.stats, aes(step_position,total_views, color = title, size = total_views)) + geom_point() +
ggtitle("relation between total views vs title v5")
plot11
#--------------------------------------------------------------------------------------------------------------------------------------------------
#Relation between total views and viewed_onehundred_percent
# Video Stats for combined data of video stats 4 and 5
cortop12 <- cor(videostats4and5[,4],videostats4and5[,15])
cortop12
#.0        he graph for the viewed_onehundred_percent vs total view
plot12 = ggplot(videostats4and5, aes(viewed_onehundred_percent,total_views, color = viewed_onehundred_percent, size = total_views)) + geom_point() +
ggtitle("relation between total views and viewed_onehundred_percent v3")
plot12
#--------------------------------------------------------------------------------------------------------------------------------------------------
#Leaving data
#The Most and Least common reason to leave the course.
#Pie chart creation
Pie_graph = ggplot(Data_reason, aes(x = "", y = perc, fill = leaving_reason)) +
geom_col() +  coord_polar(theta = "y") + geom_label(aes(label = labels),
position = position_stack(vjust = 0.5),
show.legend = FALSE) + theme_void()
#plotting the pie graph
Pie_graph
vgb#Comparing the 100%total view and The Most and Least common reason to leave the course
#plotting a pie graph
ggplot()
.
cortop9
#plotting the graph for step_position vs total_views
plot9 = ggplot(cyber.security.3_video.stats, aes(step_position,total_views, color = title, size = total_views)) + geom_point() +
ggtitle("Analysis of total views vs step position of the modules v3")
plot9
cortop12
plot12 = ggplot(videostats4and5, aes(viewed_onehundred_percent,total_views, color = viewed_onehundred_percent, size = total_views)) + geom_line()
ggtitle("relation between total views and viewed_onehundred_percent v3")
plot12
plot12 = ggplot(videostats4and5, aes(viewed_onehundred_percent,total_views, color = viewed_onehundred_percent, size = total_views)) + geom_point()
ggtitle("relation between total views and viewed_onehundred_percent v3")
plot12
#plotting the pie graph
Pie_graph
#Making data in readable format
Final_data["leaving_reason"][Final_data["leaving_reason"] == "The course wasnâ€™t what I expected"] <- "The course wasn't what I expected"
Final_data["leaving_reason"][Final_data["leaving_reason"] == "I donâ€™t have enough time"] <- "I don't have enough time"
Final_data["leaving_reason"][Final_data["leaving_reason"] == "The course wonâ€™t help me reach my goals"] <- "The course won't help me reach my goals"
Final_data
#Converting table to data frame and calculating percentage of Leaving_reason variable
Data_reason <- Final_data %>%
group_by(leaving_reason) %>% # Variable to be transformed
count() %>%
ungroup() %>%
mutate(perc = `n` / sum(`n`)) %>%
arrange(perc) %>%
mutate(labels = scales::percent(perc))
#The Most and Least common reason to leave the course.
#Pie chart creation
Pie_graph = ggplot(Data_reason, aes(x = "", y = perc, fill = leaving_reason)) +
geom_col() +  coord_polar(theta = "y") + geom_label(aes(label = labels),
position = position_stack(vjust = 0.5),
show.legend = FALSE) + theme_void()
#plotting the pie graph
Pie_graph
cortop12
plot9
# video stats 3
#Finding the relation between step position and total view using the correlation function for video stat3
cortop9 <- cor(cyber.security.3_video.stats[,1],cyber.security.3_video.stats[,4])
cortop9
#plotting the graph for step_position vs total_views
plot9 = ggplot(cyber.security.3_video.stats, aes(step_position,total_views, color = title, size = total_views)) + geom_point() +
ggtitle("Analysis of step position vs total views of the modules v3")
plot9
# video stats 4
#Finding the relation between step position and total view using the correlation function for video stat4
cortop10 <- cor(cyber.security.4_video.stats[,1],cyber.security.4_video.stats[,4])
cortop10
plot10
# video stats 5
#Finding the relation between step position and total view using the correlation function for video stat5
cortop11 <- cor(cyber.security.5_video.stats[,1],cyber.security.5_video.stats[,4])
cortop11
# Example preprocessing script.
library(ggplot2)
library(dplyr)
library(ProjectTemplate)
options(repos="https://cran.rstudio.com")
load.project()
setwd("~/sahej eda/EDA")
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_knit$set(root.dir= normalizePath('..'))
# Example preprocessing script.
library(ggplot2)
library(dplyr)
library(ProjectTemplate)
options(repos="https://cran.rstudio.com")
load.project()
# Example preprocessing script.
library(ggplot2)
library(dplyr)
library(ProjectTemplate)
options(repos="https://cran.rstudio.com")
source("src/Analysis.R")
# Example preprocessing script.
library(ggplot2)
library(dplyr)
library(ProjectTemplate)
options(repos="https://cran.rstudio.com")
source("src/analysis.R")
# Example preprocessing script.
library(ggplot2)
library(dplyr)
library(ProjectTemplate)
options(repos="https://cran.rstudio.com")
source("src/analysis.R")
# Example preprocessing script.
library(ggplot2)
library(dplyr)
library(ProjectTemplate)
options(repos="https://cran.rstudio.com")
source(src/analysis.R)
# Example preprocessing script.
library(ggplot2)
library(dplyr)
library(ProjectTemplate)
options(repos="https://cran.rstudio.com")
load.project()
# Example preprocessing script.
library('ggplot2')
library('dplyr')
library('ProjectTemplate')
options(repos="https://cran.rstudio.com")
load.project()
# Example preprocessing script.
library('ggplot2' )
library('dplyr')
library('ProjectTemplate')
options(repos="https://cran.rstudio.com")
load.project()
# Example preprocessing script.
library('ggplot2' )
library('dplyr')
library('ProjectTemplate')
options(repos="https://cran.rstudio.com")
load.project()
# Example preprocessing script.
library('ggplot2' )
library('dplyr')
library('ProjectTemplate')
options(repos="https://cran.rstudio.com")
setwd("~/sahej eda/EDA")
load.project()
source(src/analysis.R)
