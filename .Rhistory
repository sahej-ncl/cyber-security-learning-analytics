}
}
}
#countGreaterMale #total times male penguins having more bill length
#countGreaterFemale #total times female penguins having more bill length
probmale<- countGreaterMale/(countGreaterMale+countGreaterFemale) #probability of males having more bill length than females.
print("Probability of males having more bill length than females.")
probmale
penguins_flipper_length_by_sex= my.penguins %>%
group_by(species,sex) %>%
summarise(bill_depth_mm= mean(bill_depth_mm),           #summarising
bill_length_mm= mean(bill_length_mm),         #on basis
flipper_length_mm=mean(flipper_length_mm),    #of mean
body_mass_g=mean(body_mass_g))
ggplot(penguins_flipper_length_by_sex, aes(x=sex, y=flipper_length_mm,fill=sex))+   #plotting flipper length with respect to sex
geom_col(position = position_dodge())
#splitting the dataset
my.penguins_male = my.penguins[my.penguins$sex == "male",] #male data set
my.penguins_female= my.penguins[my.penguins$sex == "female",] #female data set
#counter for comparison and calculating probability as if gone through vector space time complexity would be more
countGreaterMale<-0  #counter of male penguins having more flipper length
countGreaterFemale<-0 # counter for female penguins having more flipper length
# loop initiation for comparison
for (male in my.penguins_male$flipper_length_mm){ #outer loop for male
for (female in my.penguins_female$flipper_length_mm){ #nested loop for female as we have to consider all combinations
if (male>=female){                #comparison between flipper length
countGreaterMale<- countGreaterMale+1  #increaing counter if true
}
else{
countGreaterFemale<-countGreaterFemale+1 #increasing counter if not true
}
}
}
#countGreaterMale #total times male penguins having more flipper length
#countGreaterFemale #total times female penguins having more flipper length
probmale<- countGreaterMale/(countGreaterMale+countGreaterFemale) #probability of males having more flipper length than females.
print("probability of males having more flipper length than female:")
probmale
summary(penguins)
#answer2
print("null hypotheis that penguin's flippers are 200mm in length on average:")
my.penguins_male = my.penguins[my.penguins$sex == "male",] #male data set
meanFlipperLength_Male= mean(my.penguins_male$flipper_length_mm) #mean of the flipper length
print("mean:") #printing the value
meanFlipperLength_Male
varianceFlipperLength_Male=var(my.penguins_male$flipper_length_mm) #variance of the flipper length
print("Variance:")
varianceFlipperLength_Male
length_male=length(my.penguins_male$flipper_length_mm) #total no. of male penguins
print("length of the dataset of male:")
length_male
Tvalue_male<-(meanFlipperLength_Male-200)/(sqrt(varianceFlipperLength_Male/length_male)) #t value of the null hypothesis
print("T value:")
Tvalue_male
Pvalue_male<-pt(Tvalue_male,(length_male-1)) #pvalue of the null hypothesis
print("P value:")
Pvalue_male
print("As the p value is greater than 0.05. the hypothesis stands true")
ggplot(my.penguins, aes(x=body_mass_g, fill = species)) +         #exploratory all species plot
geom_histogram()
ggplot(my.penguins, aes(x=bill_length_mm , fill = species)) +     #exploratory all species plot with respect to bill length
geom_histogram()
ggplot(my.penguins, aes(x=bill_depth_mm, fill = species)) +         #exploratory all species plot with respect to bill depth
geom_histogram()
ggplot(my.penguins, aes(x=flipper_length_mm, fill = species)) + #exploratory all species plot with respect to flipper length
geom_histogram()
penguins_by_year= my.penguins %>%
group_by(species, year)%>%              #exploratory data analysis
summarise(body_mass_g=mean(body_mass_g))
ggplot(penguins_by_year, aes(x=year, y=body_mass_g, color=species))+              #plot of body mass with respect to year
geom_line()+
geom_point()
penguins_bill_depth_by_sex= my.penguins %>%
group_by(species,sex) %>%
summarise(bill_depth_mm= mean(bill_depth_mm),           #summarising
bill_length_mm= mean(bill_length_mm),         #on basis
flipper_length_mm=mean(flipper_length_mm),    #of mean
body_mass_g=mean(body_mass_g))
ggplot(penguins_bill_depth_by_sex, aes(x=sex, y=bill_depth_mm,fill=sex))+       #plotting bill depth with respect to gender
geom_col(position = position_dodge())
#splitting the dataset
my.penguins_male = my.penguins[my.penguins$sex == "male",] #male data set
my.penguins_female= my.penguins[my.penguins$sex == "female",] #female data set
#counter for comparison and calculating probability as if gone through vector space time complexity would be more
countGreaterMale<-0  #counter of male penguins having more bill depth
countGreaterFemale<-0 # counter for female penguins having more bill depth
# loop initiation for comparison
for (male in my.penguins_male$bill_depth_mm){ #outer loop for male
for (female in my.penguins_female$bill_depth_mm){ #nested loop for female as we have to consider all combinations
if (male>=female){                #comparison between bill depth
countGreaterMale<- countGreaterMale+1  #increaing counter if true
}
else{
countGreaterFemale<-countGreaterFemale+1 #increasing counter if not true
}
}
}
#countGreaterMale #total times male penguins having more bill depth
#countGreaterFemale #total times female penguins having more bill depth
probmale<- countGreaterMale/(countGreaterMale+countGreaterFemale) #probability of males having more bill depth than females.
print("probability of males having more bill depth than females:")
probmale
#observing how many penguins have bill depth more than 20 mm
countBillDepth=0
for (i in my.penguins$bill_depth_mm){ #iterating through bill depth
if(i>= 20){
countBillDepth<-countBillDepth+1   #increasing the vounter of bill depth
}
}
print("Total number of penguins having mbull depth more than 20 mm:")
countBillDepth
if(countBillDepth<5){
print("less than 5% of penguins have Bill depth greater than or equal to 20 mm ")} # to check if it is less than 5 %
if(countBillDepth>=5){
print("greater than 5% of penguins have Bill depth greater than or equal to 20 mm") #to check if it is more than 5%
}
penguins_bill_length_by_sex= my.penguins %>%
group_by(species,sex) %>%
summarise(bill_depth_mm= mean(bill_depth_mm),           #summarising
bill_length_mm= mean(bill_length_mm),         #on basis
flipper_length_mm=mean(flipper_length_mm),    #of mean
body_mass_g=mean(body_mass_g))
ggplot(penguins_bill_length_by_sex, aes(x=sex, y=bill_length_mm,fill=sex))+   #plotting bill length with respect to gender/sex
geom_col(position = position_dodge())
#splitting the dataset
my.penguins_male = my.penguins[my.penguins$sex == "male",] #male data set
my.penguins_female= my.penguins[my.penguins$sex == "female",] #female data set
#counter for comparison and calculating probability as if gone through vector space time complexity would be more
countGreaterMale<-0  #counter of male penguins having more bill length
countGreaterFemale<-0 # counter for female penguins having more bill length
# loop initiation for comparison
for (male in my.penguins_male$bill_length_mm){ #outer loop for male
for (female in my.penguins_female$bill_length_mm){ #nested loop for female as we have to consider all combinations
if (male>=female){                #comparison between bill length
countGreaterMale<- countGreaterMale+1  #increaing counter if true
}
else{
countGreaterFemale<-countGreaterFemale+1 #increasing counter if not true
}
}
}
#countGreaterMale #total times male penguins having more bill length
#countGreaterFemale #total times female penguins having more bill length
probmale<- countGreaterMale/(countGreaterMale+countGreaterFemale) #probability of males having more bill length than females.
print("Probability of males having more bill length than females.")
probmale
penguins_flipper_length_by_sex= my.penguins %>%
group_by(species,sex) %>%
summarise(bill_depth_mm= mean(bill_depth_mm),           #summarising
bill_length_mm= mean(bill_length_mm),         #on basis
flipper_length_mm=mean(flipper_length_mm),    #of mean
body_mass_g=mean(body_mass_g))
ggplot(penguins_flipper_length_by_sex, aes(x=sex, y=flipper_length_mm,fill=sex))+   #plotting flipper length with respect to sex
geom_col(position = position_dodge())
#splitting the dataset
my.penguins_male = my.penguins[my.penguins$sex == "male",] #male data set
my.penguins_female= my.penguins[my.penguins$sex == "female",] #female data set
#counter for comparison and calculating probability as if gone through vector space time complexity would be more
countGreaterMale<-0  #counter of male penguins having more flipper length
countGreaterFemale<-0 # counter for female penguins having more flipper length
# loop initiation for comparison
for (male in my.penguins_male$flipper_length_mm){ #outer loop for male
for (female in my.penguins_female$flipper_length_mm){ #nested loop for female as we have to consider all combinations
if (male>=female){                #comparison between flipper length
countGreaterMale<- countGreaterMale+1  #increaing counter if true
}
else{
countGreaterFemale<-countGreaterFemale+1 #increasing counter if not true
}
}
}
#countGreaterMale #total times male penguins having more flipper length
#countGreaterFemale #total times female penguins having more flipper length
probmale<- countGreaterMale/(countGreaterMale+countGreaterFemale) #probability of males having more flipper length than females.
print("probability of males having more flipper length than female:")
probmale
#splitting the dataset
my.penguins_male = my.penguins[my.penguins$sex == "male",] #male data set
my.penguins_female= my.penguins[my.penguins$sex == "female",] #female data set
#counter for comparison and calculating probability as if gone through vector space time complexity would be more
countGreaterMale<-0  #counter of male penguins having more bill depth
countGreaterFemale<-0 # counter for female penguins having more bill depth
# loop initiation for comparison
for (male in my.penguins_male$bill_depth_mm){ #outer loop for male
for (female in my.penguins_female$bill_depth_mm){ #nested loop for female as we have to consider all combinations
if (male>=female){                #comparison between bill depth
countGreaterMale<- countGreaterMale+1  #increaing counter if true
}
else{
countGreaterFemale<-countGreaterFemale+1 #increasing counter if not true
}
}
}
#splitting the dataset
my.penguins_male = my.penguins[my.penguins$sex == "male",] #male data set
my.penguins_female= my.penguins[my.penguins$sex == "female",] #female data set
#counter for comparison and calculating probability as if gone through vector space time complexity would be more
countGreaterMale<-0  #counter of male penguins having more bill depth
countGreaterFemale<-0 # counter for female penguins having more bill depth
# loop initiation for comparison
for (male in my.penguins_male$bill_depth_mm){ #outer loop for male
for (female in my.penguins_female$bill_depth_mm){ #nested loop for female as we have to consider all combinations
if (male>=female){                #comparison between bill depth
countGreaterMale<- countGreaterMale+1  #increaing counter if true
}
else{
countGreaterFemale<-countGreaterFemale+1 #increasing counter if not true
}
}
}
#splitting the dataset
my.penguins_male = my.penguins[my.penguins$sex == "male",] #male data set
my.penguins_female= my.penguins[my.penguins$sex == "female",] #female data set
#counter for comparison and calculating probability as if gone through vector space time complexity would be more
countGreaterWeightMale<-0  #counter of male penguins being heavier
countGreaterWeightFemale<-0 # counter for female penguins being heavier
# loop initiation for comparison
for (male in my.penguins_male$body_mass_g){ #outer loop for male
for (female in my.penguins_female$body_mass_g){ #nested loop for female as we have to consider all combinations
if (male>=female){                #comparison between weights
countGreaterWeightMale<- countGreaterWeightMale+1  #increaing counter if true
}
else{
countGreaterWeightFemale<-countGreaterWeightFemale+1 #increasing counter if not true
}
}
}
#countGreaterWeightMale #total times male penguins are heavier than females
#countGreaterWeightFemale #total times female penguins are heavier than males
prob<- countGreaterWeightMale/(countGreaterWeightMale+countGreaterWeightFemale) #probability of males heavier than females.
print("probability of males heavier than females:")
prob
# Example preprocessing script.
install.packages("dplyr")
install.packages("ggplot2")
library(ggplot2)
library(dplyr)
load.project()
#video_stat3 <- read.csv(file= 'C:/Users/Sahej/Documents/sahej eda/EDA/data/cyber-security-3_video-stats.csv')
#video_stat4 <- read.csv(file= 'C:/Users/Sahej/Documents/sahej eda/EDA/data/cyber-security-4_video-stats.csv')
#video_stat5 <- read.csv(file= 'C:/Users/Sahej/Documents/sahej eda/EDA/data/cyber-security-5_video-stats.csv')
#Adding month column in data for September 2017 month
#cyber.security.3_video.stats$Month<-"September,2017"
#Adding month column in data for November 2017 month
#cyber.security.4_video.stats$Month<-"November,2017"
#Adding month column in data for Febuary 2018 month
#cyber.security.5_video.stats$Month<-"Febuary,2018"
#Merging data from september 2017 and november 2017
#Merge1=merge(cyber.security.4_video.stats, cyber.security.5_video.stats, by='step_position', all = TRUE)
#combining video stats data 4 and 5
videostats4and5 <- rbind(cyber.security.4_video.stats, cyber.security.5_video.stats)
#("Combined by rows: ", "\n")
videostats4and5
#combining leaving data response 4 and 5
#Final_data <- rbind(cyber-security-4_leaving-survey-responses, cyber-security-5_leaving-survey-responses)
#cat("Combined by rows: ", "\n")
#Final_data
#Leaving Data
#Using the answer from here [Importing several files and indexing them ]
csv_files  = list.files(path="data",pattern = '*_leaving-survey-responses.csv', full.names = TRUE)
csv_files
#read files into a list
Merge <- lapply(csv_files, read.csv, header = TRUE)
Merge
#Using rbind to combine files
Final_data <- do.call(rbind , Merge)
Final_data
#Deleting records where the Leaving reason is "Prefer not say".
Final_data<-Final_data[!(Final_data$leaving_reason=="I prefer not to say"),]
Final_data
#Removing_NA_records
Final_data <- na.omit(Final_data)
#Making data in readable format
Final_data["leaving_reason"][Final_data["leaving_reason"] == "The course wasnâ€™️t what I expected"] <- "The course wasn't what I expected"
Final_data["leaving_reason"][Final_data["leaving_reason"] == "I donâ€™️t have enough time"] <- "I don't have enough time"
Final_data["leaving_reason"][Final_data["leaving_reason"] == "The course wonâ€™️t help me reach my goals"] <- "The course won't help me reach my goals"
Final_data
#Converting table to data frame and calculating percentage of Leaving_reason variable
Data_reason <- Final_data %>%
group_by(leaving_reason) %>% # Variable to be transformed
count() %>%
ungroup() %>%
mutate(perc = `n` / sum(`n`)) %>%
arrange(perc) %>%
mutate(labels = scales::percent(perc))
load.project()
install.packages("ProjectTemplate")
install.packages("dplyr")
library(ggplot2)
library(ProjectTemplate)
#setwd("~/sahej eda/EDA")
load.project()
#--------------------------------------------------------------------------------------------------------------------------------------------------
#Relation between Step_position(title) vs total view
# video stats 3
#Finding the relation between step position and total view using the correlation function for video stat3
cortop9 <- cor(cyber.security.3_video.stats[,1],cyber.security.3_video.stats[,4])
cortop9
#plotting the graph for step_position vs total_views
plot9 = ggplot(cyber.security.3_video.stats, aes(step_position,total_views, color = title, size = total_views)) + geom_point() +
ggtitle("Analysis of total users based on total downloads of the modules v3")
plot9
# video stats 4
#Finding the relation between step position and total view using the correlation function for video stat4
cortop10 <- cor(cyber.security.4_video.stats[,1],cyber.security.4_video.stats[,4])
cortop10
#plotting the graph for step_position vs total_views
plot10 = ggplot(cyber.security.4_video.stats, aes(step_position,total_views, color = title, size = total_views)) + geom_point() +
ggtitle("Analysis of total users based on total downloads of the modules v4")
plot10
# video stats 5
#Finding the relation between step position and total view using the correlation function for video stat5
cortop11 <- cor(cyber.security.5_video.stats[,1],cyber.security.5_video.stats[,4])
cortop11
#plotting the graph for step_position vs total_views
plot11 = ggplot(cyber.security.5_video.stats, aes(step_position,total_views, color = title, size = total_views)) + geom_point() +
ggtitle("relation between total views vs title v5")
plot11
#--------------------------------------------------------------------------------------------------------------------------------------------------
#Relation between total views and duration of the video
# video stats 3
#Finding the relation between total views and duration of the video for video stat3 using correlation function
cortop9 <- cor(cyber.security.3_video.stats[,1],cyber.security.3_video.stats[,4])
cortop9
#plotting the graph for the title vs total view
plot9 = ggplot(cyber.security.3_video.stats, aes(step_position,total_views, color = title, size = total_views)) + geom_point() +
ggtitle("Analysis of total users based on total downloads of the modules v3")
plot9
# video stats 4
#Finding the relation between total views and duration of the video for video stat4
cortop10 <- cor(cyber.security.4_video.stats[,1],cyber.security.4_video.stats[,4])
cortop10
#plotting the graph for the title vs total view
plot10 = ggplot(cyber.security.4_video.stats, aes(step_position,total_views, color = title, size = total_views)) + geom_point() +
ggtitle("Analysis of total users based on total downloads of the modules v4")
plot10
# video stats 5
#Finding the relation between total views and duration of the video for video stat5
cortop11 <- cor(cyber.security.5_video.stats[,1],cyber.security.5_video.stats[,4])
cortop11
#plotting the graph for the title vs total view
plot11 = ggplot(cyber.security.5_video.stats, aes(step_position,total_views, color = title, size = total_views)) + geom_point() +
ggtitle("relation between total views vs title v5")
plot11
#--------------------------------------------------------------------------------------------------------------------------------------------------
#Relation between total views and viewed_onehundred_percent
# Video Stats for combined data of video stats 4 and 5
cortop12 <- cor(videostats4and5[,4],videostats4and5[,15])
cortop12
#.0        he graph for the viewed_onehundred_percent vs total view
plot12 = ggplot(videostats4and5, aes(viewed_onehundred_percent,total_views, color = viewed_onehundred_percent, size = total_views)) + geom_point() +
ggtitle("relation between total views and viewed_onehundred_percent v3")
plot12
#--------------------------------------------------------------------------------------------------------------------------------------------------
#Leaving data
#The Most and Least common reason to leave the course.
#Pie chart creation
Pie_graph = ggplot(Data_reason, aes(x = "", y = perc, fill = leaving_reason)) +
geom_col() +  coord_polar(theta = "y") + geom_label(aes(label = labels),
position = position_stack(vjust = 0.5),
show.legend = FALSE) + theme_void()
#plotting the pie graph
Pie_graph
vgb#Comparing the 100%total view and The Most and Least common reason to leave the course
#plotting a pie graph
ggplot()
.
install.packages("dplyr")
# Example preprocessing script.
install.packages("dplyr")
install.packages("ggplot2")
library(ggplot2)
library(dplyr)
load.project()
#video_stat3 <- read.csv(file= 'C:/Users/Sahej/Documents/sahej eda/EDA/data/cyber-security-3_video-stats.csv')
#video_stat4 <- read.csv(file= 'C:/Users/Sahej/Documents/sahej eda/EDA/data/cyber-security-4_video-stats.csv')
#video_stat5 <- read.csv(file= 'C:/Users/Sahej/Documents/sahej eda/EDA/data/cyber-security-5_video-stats.csv')
#Adding month column in data for September 2017 month
#cyber.security.3_video.stats$Month<-"September,2017"
#Adding month column in data for November 2017 month
#cyber.security.4_video.stats$Month<-"November,2017"
#Adding month column in data for Febuary 2018 month
#cyber.security.5_video.stats$Month<-"Febuary,2018"
#Merging data from september 2017 and november 2017
#Merge1=merge(cyber.security.4_video.stats, cyber.security.5_video.stats, by='step_position', all = TRUE)
#combining video stats data 4 and 5
videostats4and5 <- rbind(cyber.security.4_video.stats, cyber.security.5_video.stats)
#("Combined by rows: ", "\n")
videostats4and5
#combining leaving data response 4 and 5
#Final_data <- rbind(cyber-security-4_leaving-survey-responses, cyber-security-5_leaving-survey-responses)
#cat("Combined by rows: ", "\n")
#Final_data
#Leaving Data
#Using the answer from here [Importing several files and indexing them ]
csv_files  = list.files(path="data",pattern = '*_leaving-survey-responses.csv', full.names = TRUE)
csv_files
#read files into a list
Merge <- lapply(csv_files, read.csv, header = TRUE)
Merge
#Using rbind to combine files
Final_data <- do.call(rbind , Merge)
Final_data
#Deleting records where the Leaving reason is "Prefer not say".
Final_data<-Final_data[!(Final_data$leaving_reason=="I prefer not to say"),]
Final_data
#Removing_NA_records
Final_data <- na.omit(Final_data)
#Making data in readable format
Final_data["leaving_reason"][Final_data["leaving_reason"] == "The course wasnâ€™️t what I expected"] <- "The course wasn't what I expected"
Final_data["leaving_reason"][Final_data["leaving_reason"] == "I donâ€™️t have enough time"] <- "I don't have enough time"
Final_data["leaving_reason"][Final_data["leaving_reason"] == "The course wonâ€™️t help me reach my goals"] <- "The course won't help me reach my goals"
Final_data
#Converting table to data frame and calculating percentage of Leaving_reason variable
Data_reason <- Final_data %>%
group_by(leaving_reason) %>% # Variable to be transformed
count() %>%
ungroup() %>%
mutate(perc = `n` / sum(`n`)) %>%
arrange(perc) %>%
mutate(labels = scales::percent(perc))
install.packages("dplyr")
install.packages("ggplot2")
install.packages("ProjectTemplate")
install.packages("dplyr")
library(ggplot2)
library(ProjectTemplate)
#setwd("~/sahej eda/EDA")
load.project()
#--------------------------------------------------------------------------------------------------------------------------------------------------
#Relation between Step_position(title) vs total view
# video stats 3
#Finding the relation between step position and total view using the correlation function for video stat3
cortop9 <- cor(cyber.security.3_video.stats[,1],cyber.security.3_video.stats[,4])
cortop9
#plotting the graph for step_position vs total_views
plot9 = ggplot(cyber.security.3_video.stats, aes(step_position,total_views, color = title, size = total_views)) + geom_point() +
ggtitle("Analysis of total users based on total downloads of the modules v3")
plot9
# video stats 4
#Finding the relation between step position and total view using the correlation function for video stat4
cortop10 <- cor(cyber.security.4_video.stats[,1],cyber.security.4_video.stats[,4])
cortop10
#plotting the graph for step_position vs total_views
plot10 = ggplot(cyber.security.4_video.stats, aes(step_position,total_views, color = title, size = total_views)) + geom_point() +
ggtitle("Analysis of total users based on total downloads of the modules v4")
plot10
# video stats 5
#Finding the relation between step position and total view using the correlation function for video stat5
cortop11 <- cor(cyber.security.5_video.stats[,1],cyber.security.5_video.stats[,4])
cortop11
#plotting the graph for step_position vs total_views
plot11 = ggplot(cyber.security.5_video.stats, aes(step_position,total_views, color = title, size = total_views)) + geom_point() +
ggtitle("relation between total views vs title v5")
plot11
#--------------------------------------------------------------------------------------------------------------------------------------------------
#Relation between total views and duration of the video
# video stats 3
#Finding the relation between total views and duration of the video for video stat3 using correlation function
cortop9 <- cor(cyber.security.3_video.stats[,1],cyber.security.3_video.stats[,4])
cortop9
#plotting the graph for the title vs total view
plot9 = ggplot(cyber.security.3_video.stats, aes(step_position,total_views, color = title, size = total_views)) + geom_point() +
ggtitle("Analysis of total users based on total downloads of the modules v3")
plot9
# video stats 4
#Finding the relation between total views and duration of the video for video stat4
cortop10 <- cor(cyber.security.4_video.stats[,1],cyber.security.4_video.stats[,4])
cortop10
#plotting the graph for the title vs total view
plot10 = ggplot(cyber.security.4_video.stats, aes(step_position,total_views, color = title, size = total_views)) + geom_point() +
ggtitle("Analysis of total users based on total downloads of the modules v4")
plot10
# video stats 5
#Finding the relation between total views and duration of the video for video stat5
cortop11 <- cor(cyber.security.5_video.stats[,1],cyber.security.5_video.stats[,4])
cortop11
#plotting the graph for the title vs total view
plot11 = ggplot(cyber.security.5_video.stats, aes(step_position,total_views, color = title, size = total_views)) + geom_point() +
ggtitle("relation between total views vs title v5")
plot11
#--------------------------------------------------------------------------------------------------------------------------------------------------
#Relation between total views and viewed_onehundred_percent
# Video Stats for combined data of video stats 4 and 5
cortop12 <- cor(videostats4and5[,4],videostats4and5[,15])
cortop12
#.0        he graph for the viewed_onehundred_percent vs total view
plot12 = ggplot(videostats4and5, aes(viewed_onehundred_percent,total_views, color = viewed_onehundred_percent, size = total_views)) + geom_point() +
ggtitle("relation between total views and viewed_onehundred_percent v3")
plot12
#--------------------------------------------------------------------------------------------------------------------------------------------------
#Leaving data
#The Most and Least common reason to leave the course.
#Pie chart creation
Pie_graph = ggplot(Data_reason, aes(x = "", y = perc, fill = leaving_reason)) +
geom_col() +  coord_polar(theta = "y") + geom_label(aes(label = labels),
position = position_stack(vjust = 0.5),
show.legend = FALSE) + theme_void()
#plotting the pie graph
Pie_graph
vgb#Comparing the 100%total view and The Most and Least common reason to leave the course
#plotting a pie graph
ggplot()
.
install.packages("ProjectTemplate")
install.packages("dplyr")
install.packages("ProjectTemplate")
install.packages("dplyr")
library(ggplot2)
library(ProjectTemplate)
setwd("~/sahej eda/EDA")
load.project()
