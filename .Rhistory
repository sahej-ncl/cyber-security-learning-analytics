group_by(species,sex) %>%
summarise(bill_depth_mm= mean(bill_depth_mm),           #summarising
bill_length_mm= mean(bill_length_mm),         #on basis
flipper_length_mm=mean(flipper_length_mm),    #of mean
body_mass_g=mean(body_mass_g))
ggplot(penguins_bill_depth_by_sex, aes(x=sex, y=bill_depth_mm,fill=sex))+       #plotting bill depth with respect to gender
geom_col(position = position_dodge())
#splitting the dataset
my.penguins_male = my.penguins[my.penguins$sex == "male",] #male data set
my.penguins_female= my.penguins[my.penguins$sex == "female",] #female data set
#counter for comparison and calculating probability as if gone through vector space time complexity would be more
countGreaterMale<-0  #counter of male penguins having more bill depth
countGreaterFemale<-0 # counter for female penguins having more bill depth
# loop initiation for comparison
for (male in my.penguins_male$bill_depth_mm){ #outer loop for male
for (female in my.penguins_female$bill_depth_mm){ #nested loop for female as we have to consider all combinations
if (male>=female){                #comparison between bill depth
countGreaterMale<- countGreaterMale+1  #increaing counter if true
}
else{
countGreaterFemale<-countGreaterFemale+1 #increasing counter if not true
}
}
}
#countGreaterMale #total times male penguins having more bill depth
#countGreaterFemale #total times female penguins having more bill depth
probmale<- countGreaterMale/(countGreaterMale+countGreaterFemale) #probability of males having more bill depth than females.
print("probability of males having more bill depth than females:")
probmale
#observing how many penguins have bill depth more than 20 mm
countBillDepth=0
for (i in my.penguins$bill_depth_mm){ #iterating through bill depth
if(i>= 20){
countBillDepth<-countBillDepth+1   #increasing the vounter of bill depth
}
}
print("Total number of penguins having mbull depth more than 20 mm:")
countBillDepth
if(countBillDepth<5){
print("less than 5% of penguins have Bill depth greater than or equal to 20 mm ")} # to check if it is less than 5 %
if(countBillDepth>=5){
print("greater than 5% of penguins have Bill depth greater than or equal to 20 mm") #to check if it is more than 5%
}
penguins_bill_length_by_sex= my.penguins %>%
group_by(species,sex) %>%
summarise(bill_depth_mm= mean(bill_depth_mm),           #summarising
bill_length_mm= mean(bill_length_mm),         #on basis
flipper_length_mm=mean(flipper_length_mm),    #of mean
body_mass_g=mean(body_mass_g))
ggplot(penguins_bill_length_by_sex, aes(x=sex, y=bill_length_mm,fill=sex))+   #plotting bill length with respect to gender/sex
geom_col(position = position_dodge())
#splitting the dataset
my.penguins_male = my.penguins[my.penguins$sex == "male",] #male data set
my.penguins_female= my.penguins[my.penguins$sex == "female",] #female data set
#counter for comparison and calculating probability as if gone through vector space time complexity would be more
countGreaterMale<-0  #counter of male penguins having more bill length
countGreaterFemale<-0 # counter for female penguins having more bill length
# loop initiation for comparison
for (male in my.penguins_male$bill_length_mm){ #outer loop for male
for (female in my.penguins_female$bill_length_mm){ #nested loop for female as we have to consider all combinations
if (male>=female){                #comparison between bill length
countGreaterMale<- countGreaterMale+1  #increaing counter if true
}
else{
countGreaterFemale<-countGreaterFemale+1 #increasing counter if not true
}
}
}
#countGreaterMale #total times male penguins having more bill length
#countGreaterFemale #total times female penguins having more bill length
probmale<- countGreaterMale/(countGreaterMale+countGreaterFemale) #probability of males having more bill length than females.
print("Probability of males having more bill length than females.")
probmale
penguins_flipper_length_by_sex= my.penguins %>%
group_by(species,sex) %>%
summarise(bill_depth_mm= mean(bill_depth_mm),           #summarising
bill_length_mm= mean(bill_length_mm),         #on basis
flipper_length_mm=mean(flipper_length_mm),    #of mean
body_mass_g=mean(body_mass_g))
ggplot(penguins_flipper_length_by_sex, aes(x=sex, y=flipper_length_mm,fill=sex))+   #plotting flipper length with respect to sex
geom_col(position = position_dodge())
#splitting the dataset
my.penguins_male = my.penguins[my.penguins$sex == "male",] #male data set
my.penguins_female= my.penguins[my.penguins$sex == "female",] #female data set
#counter for comparison and calculating probability as if gone through vector space time complexity would be more
countGreaterMale<-0  #counter of male penguins having more flipper length
countGreaterFemale<-0 # counter for female penguins having more flipper length
# loop initiation for comparison
for (male in my.penguins_male$flipper_length_mm){ #outer loop for male
for (female in my.penguins_female$flipper_length_mm){ #nested loop for female as we have to consider all combinations
if (male>=female){                #comparison between flipper length
countGreaterMale<- countGreaterMale+1  #increaing counter if true
}
else{
countGreaterFemale<-countGreaterFemale+1 #increasing counter if not true
}
}
}
#countGreaterMale #total times male penguins having more flipper length
#countGreaterFemale #total times female penguins having more flipper length
probmale<- countGreaterMale/(countGreaterMale+countGreaterFemale) #probability of males having more flipper length than females.
print("probability of males having more flipper length than female:")
probmale
summary(penguins)
#answer2
print("null hypotheis that penguin's flippers are 200mm in length on average:")
my.penguins_male = my.penguins[my.penguins$sex == "male",] #male data set
meanFlipperLength_Male= mean(my.penguins_male$flipper_length_mm) #mean of the flipper length
print("mean:") #printing the value
meanFlipperLength_Male
varianceFlipperLength_Male=var(my.penguins_male$flipper_length_mm) #variance of the flipper length
print("Variance:")
varianceFlipperLength_Male
length_male=length(my.penguins_male$flipper_length_mm) #total no. of male penguins
print("length of the dataset of male:")
length_male
Tvalue_male<-(meanFlipperLength_Male-200)/(sqrt(varianceFlipperLength_Male/length_male)) #t value of the null hypothesis
print("T value:")
Tvalue_male
Pvalue_male<-pt(Tvalue_male,(length_male-1)) #pvalue of the null hypothesis
print("P value:")
Pvalue_male
print("As the p value is greater than 0.05. the hypothesis stands true")
ggplot(my.penguins, aes(x=body_mass_g, fill = species)) +         #exploratory all species plot
geom_histogram()
print("To confirm wih graph if Gentoo penguins are really heavier than 5000 kg on average. let's assume a hypothesis that they are and calculate the null hypothesis")
my.penguins_Gentoo = my.penguins[my.penguins$species == "Gentoo",] #considering only species of gentoo
meanweight_Gentoo=mean(my.penguins_Gentoo$body_mass_g)             #taking the mean of weight of just gentoo species
print("mean:")
meanweight_Gentoo
variance_Gentoo=var(my.penguins_Gentoo$body_mass_g)                 #taking the variance of weight of just gentoo species
print("Variance:")
variance_Gentoo
length_Gentoo=length(my.penguins_Gentoo$body_mass_g)                 #taking the length of weight of just gentoo species
print("length:")
length_Gentoo
Tvalue_Gentoo<-(meanweight_Gentoo-5000)/(sqrt(variance_Gentoo/length_Gentoo))     #taking the tvalue of  gentoo species at 5000gm
print("T value:")
Tvalue_Gentoo
Pvalue_Gentoo=pt(Tvalue_Gentoo,(length_Gentoo-1))                     #taking the p value gentoo species at 5000 gm
print("P value:")
Pvalue_Gentoo
if(Pvalue_Gentoo>0.05){
print("As their is no evidence against our approximation, hence we can accept the hypothesis") #to conclude our hypotheis was true, and majority of penguins weigh more tan 5000 kg
}
ggplot(my.penguins, aes(x=bill_length_mm , fill = species)) +     #exploratory all species plot with respect to bill length
geom_histogram()
ggplot(my.penguins, aes(x=bill_depth_mm, fill = species)) +         #exploratory all species plot with respect to bill depth
geom_histogram()
ggplot(my.penguins, aes(x=flipper_length_mm, fill = species)) + #exploratory all species plot with respect to flipper length
geom_histogram()
penguins_by_year= my.penguins %>%
group_by(species, year)%>%              #exploratory data analysis
summarise(body_mass_g=mean(body_mass_g))
ggplot(penguins_by_year, aes(x=year, y=body_mass_g, color=species))+              #plot of body mass with respect to year
geom_line()+
geom_point()
install.packages("palmerpenguins")
print("To confirm wih graph if Gentoo penguins are really heavier than 5000 kg on average. let's assume a hypothesis that they are and calculate the null hypothesis")
my.penguins_Gentoo = my.penguins[my.penguins$species == "Gentoo",] #considering only species of gentoo
meanweight_Gentoo=mean(my.penguins_Gentoo$body_mass_g)             #taking the mean of weight of just gentoo species
print("mean:")
meanweight_Gentoo
print("To confirm wih graph if Gentoo penguins are really heavier than 5000 kg on average. let's assume a hypothesis that they are and calculate the null hypothesis")
my.penguins_Gentoo = my.penguins[my.penguins$species == "Gentoo",] #considering only species of gentoo
meanweight_Gentoo=mean(my.penguins_Gentoo$body_mass_g)             #taking the mean of weight of just gentoo species
print("mean:")
meanweight_Gentoo
variance_Gentoo=var(my.penguins_Gentoo$body_mass_g)                 #taking the variance of weight of just gentoo species
print("Variance:")
variance_Gentoo
print("To confirm wih graph if Gentoo penguins are really heavier than 5000 kg on average. let's assume a hypothesis that they are and calculate the null hypothesis")
my.penguins_Gentoo = my.penguins[my.penguins$species == "Gentoo",] #considering only species of gentoo
meanweight_Gentoo=mean(my.penguins_Gentoo$body_mass_g)             #taking the mean of weight of just gentoo species
print("mean:")
meanweight_Gentoo
variance_Gentoo=var(my.penguins_Gentoo$body_mass_g)                 #taking the variance of weight of just gentoo species
print("Variance:")
variance_Gentoo
length_Gentoo=length(my.penguins_Gentoo$body_mass_g)                 #taking the length of weight of just gentoo species
print("length:")
length_Gentoo
print("To confirm wih graph if Gentoo penguins are really heavier than 5000 kg on average. let's assume a hypothesis that they are and calculate the null hypothesis")
my.penguins_Gentoo = my.penguins[my.penguins$species == "Gentoo",] #considering only species of gentoo
meanweight_Gentoo=mean(my.penguins_Gentoo$body_mass_g)             #taking the mean of weight of just gentoo species
print("mean:")
meanweight_Gentoo
variance_Gentoo=var(my.penguins_Gentoo$body_mass_g)                 #taking the variance of weight of just gentoo species
print("Variance:")
variance_Gentoo
length_Gentoo=length(my.penguins_Gentoo$body_mass_g)                 #taking the length of weight of just gentoo species
print("length:")
length_Gentoo
Tvalue_Gentoo<-(meanweight_Gentoo-5000)/(sqrt(variance_Gentoo/length_Gentoo))     #taking the tvalue of  gentoo species at 5000gm
print("T value:")
Tvalue_Gentoo
Pvalue_Gentoo=pt(Tvalue_Gentoo,(length_Gentoo-1))                     #taking the p value gentoo species at 5000 gm
print("P value:")
print("To confirm wih graph if Gentoo penguins are really heavier than 5000 kg on average. let's assume a hypothesis that they are and calculate the null hypothesis")
my.penguins_Gentoo = my.penguins[my.penguins$species == "Gentoo",] #considering only species of gentoo
meanweight_Gentoo=mean(my.penguins_Gentoo$body_mass_g)             #taking the mean of weight of just gentoo species
print("mean:")
meanweight_Gentoo
variance_Gentoo=var(my.penguins_Gentoo$body_mass_g)                 #taking the variance of weight of just gentoo species
print("Variance:")
variance_Gentoo
length_Gentoo=length(my.penguins_Gentoo$body_mass_g)                 #taking the length of weight of just gentoo species
print("length:")
length_Gentoo
Tvalue_Gentoo<-(meanweight_Gentoo-5000)/(sqrt(variance_Gentoo/length_Gentoo))     #taking the tvalue of  gentoo species at 5000gm
print("T value:")
Tvalue_Gentoo
Pvalue_Gentoo=pt(Tvalue_Gentoo,(length_Gentoo-1))                     #taking the p value gentoo species at 5000 gm
print("P value:")
Pvalue_Gentoo
if(Pvalue_Gentoo>0.05){
print("As their is no evidence against our approximation, hence we can accept the hypothesis") #to conclude our hypotheis was true, and majority of penguins weigh more tan 5000 kg
}
ggplot(my.penguins, aes(x=bill_length_mm , fill = species)) +     #exploratory all species plot with respect to bill length
geom_histogram()
#splitting the dataset
my.penguins_male = my.penguins[my.penguins$sex == "male",] #male data set
my.penguins_female= my.penguins[my.penguins$sex == "female",] #female data set
#counter for comparison and calculating probability as if gone through vector space time complexity would be more
countGreaterMale<-0  #counter of male penguins having more bill length
countGreaterFemale<-0 # counter for female penguins having more bill length
# loop initiation for comparison
for (male in my.penguins_male$bill_length_mm){ #outer loop for male
for (female in my.penguins_female$bill_length_mm){ #nested loop for female as we have to consider all combinations
if (male>=female){                #comparison between bill length
countGreaterMale<- countGreaterMale+1  #increaing counter if true
}
else{
countGreaterFemale<-countGreaterFemale+1 #increasing counter if not true
}
}
}
#countGreaterMale #total times male penguins having more bill length
#countGreaterFemale #total times female penguins having more bill length
probmale<- countGreaterMale/(countGreaterMale+countGreaterFemale) #probability of males having more bill length than females.
print("Probability of males having more bill length than females.")
probmale
penguins_flipper_length_by_sex= my.penguins %>%
group_by(species,sex) %>%
summarise(bill_depth_mm= mean(bill_depth_mm),           #summarising
bill_length_mm= mean(bill_length_mm),         #on basis
flipper_length_mm=mean(flipper_length_mm),    #of mean
body_mass_g=mean(body_mass_g))
ggplot(penguins_flipper_length_by_sex, aes(x=sex, y=flipper_length_mm,fill=sex))+   #plotting flipper length with respect to sex
geom_col(position = position_dodge())
#splitting the dataset
my.penguins_male = my.penguins[my.penguins$sex == "male",] #male data set
my.penguins_female= my.penguins[my.penguins$sex == "female",] #female data set
#counter for comparison and calculating probability as if gone through vector space time complexity would be more
countGreaterMale<-0  #counter of male penguins having more flipper length
countGreaterFemale<-0 # counter for female penguins having more flipper length
# loop initiation for comparison
for (male in my.penguins_male$flipper_length_mm){ #outer loop for male
for (female in my.penguins_female$flipper_length_mm){ #nested loop for female as we have to consider all combinations
if (male>=female){                #comparison between flipper length
countGreaterMale<- countGreaterMale+1  #increaing counter if true
}
else{
countGreaterFemale<-countGreaterFemale+1 #increasing counter if not true
}
}
}
#countGreaterMale #total times male penguins having more flipper length
#countGreaterFemale #total times female penguins having more flipper length
probmale<- countGreaterMale/(countGreaterMale+countGreaterFemale) #probability of males having more flipper length than females.
print("probability of males having more flipper length than female:")
probmale
summary(penguins)
#answer2
print("null hypotheis that penguin's flippers are 200mm in length on average:")
my.penguins_male = my.penguins[my.penguins$sex == "male",] #male data set
meanFlipperLength_Male= mean(my.penguins_male$flipper_length_mm) #mean of the flipper length
print("mean:") #printing the value
meanFlipperLength_Male
varianceFlipperLength_Male=var(my.penguins_male$flipper_length_mm) #variance of the flipper length
print("Variance:")
varianceFlipperLength_Male
length_male=length(my.penguins_male$flipper_length_mm) #total no. of male penguins
print("length of the dataset of male:")
length_male
Tvalue_male<-(meanFlipperLength_Male-200)/(sqrt(varianceFlipperLength_Male/length_male)) #t value of the null hypothesis
print("T value:")
Tvalue_male
Pvalue_male<-pt(Tvalue_male,(length_male-1)) #pvalue of the null hypothesis
print("P value:")
Pvalue_male
print("As the p value is greater than 0.05. the hypothesis stands true")
ggplot(my.penguins, aes(x=body_mass_g, fill = species)) +         #exploratory all species plot
geom_histogram()
ggplot(my.penguins, aes(x=bill_length_mm , fill = species)) +     #exploratory all species plot with respect to bill length
geom_histogram()
ggplot(my.penguins, aes(x=bill_depth_mm, fill = species)) +         #exploratory all species plot with respect to bill depth
geom_histogram()
ggplot(my.penguins, aes(x=flipper_length_mm, fill = species)) + #exploratory all species plot with respect to flipper length
geom_histogram()
penguins_by_year= my.penguins %>%
group_by(species, year)%>%              #exploratory data analysis
summarise(body_mass_g=mean(body_mass_g))
ggplot(penguins_by_year, aes(x=year, y=body_mass_g, color=species))+              #plot of body mass with respect to year
geom_line()+
geom_point()
penguins_bill_depth_by_sex= my.penguins %>%
group_by(species,sex) %>%
summarise(bill_depth_mm= mean(bill_depth_mm),           #summarising
bill_length_mm= mean(bill_length_mm),         #on basis
flipper_length_mm=mean(flipper_length_mm),    #of mean
body_mass_g=mean(body_mass_g))
ggplot(penguins_bill_depth_by_sex, aes(x=sex, y=bill_depth_mm,fill=sex))+       #plotting bill depth with respect to gender
geom_col(position = position_dodge())
#splitting the dataset
my.penguins_male = my.penguins[my.penguins$sex == "male",] #male data set
my.penguins_female= my.penguins[my.penguins$sex == "female",] #female data set
#counter for comparison and calculating probability as if gone through vector space time complexity would be more
countGreaterMale<-0  #counter of male penguins having more bill depth
countGreaterFemale<-0 # counter for female penguins having more bill depth
# loop initiation for comparison
for (male in my.penguins_male$bill_depth_mm){ #outer loop for male
for (female in my.penguins_female$bill_depth_mm){ #nested loop for female as we have to consider all combinations
if (male>=female){                #comparison between bill depth
countGreaterMale<- countGreaterMale+1  #increaing counter if true
}
else{
countGreaterFemale<-countGreaterFemale+1 #increasing counter if not true
}
}
}
#countGreaterMale #total times male penguins having more bill depth
#countGreaterFemale #total times female penguins having more bill depth
probmale<- countGreaterMale/(countGreaterMale+countGreaterFemale) #probability of males having more bill depth than females.
print("probability of males having more bill depth than females:")
probmale
#observing how many penguins have bill depth more than 20 mm
countBillDepth=0
for (i in my.penguins$bill_depth_mm){ #iterating through bill depth
if(i>= 20){
countBillDepth<-countBillDepth+1   #increasing the vounter of bill depth
}
}
print("Total number of penguins having mbull depth more than 20 mm:")
countBillDepth
if(countBillDepth<5){
print("less than 5% of penguins have Bill depth greater than or equal to 20 mm ")} # to check if it is less than 5 %
if(countBillDepth>=5){
print("greater than 5% of penguins have Bill depth greater than or equal to 20 mm") #to check if it is more than 5%
}
penguins_bill_length_by_sex= my.penguins %>%
group_by(species,sex) %>%
summarise(bill_depth_mm= mean(bill_depth_mm),           #summarising
bill_length_mm= mean(bill_length_mm),         #on basis
flipper_length_mm=mean(flipper_length_mm),    #of mean
body_mass_g=mean(body_mass_g))
ggplot(penguins_bill_length_by_sex, aes(x=sex, y=bill_length_mm,fill=sex))+   #plotting bill length with respect to gender/sex
geom_col(position = position_dodge())
#splitting the dataset
my.penguins_male = my.penguins[my.penguins$sex == "male",] #male data set
my.penguins_female= my.penguins[my.penguins$sex == "female",] #female data set
#counter for comparison and calculating probability as if gone through vector space time complexity would be more
countGreaterMale<-0  #counter of male penguins having more bill length
countGreaterFemale<-0 # counter for female penguins having more bill length
# loop initiation for comparison
for (male in my.penguins_male$bill_length_mm){ #outer loop for male
for (female in my.penguins_female$bill_length_mm){ #nested loop for female as we have to consider all combinations
if (male>=female){                #comparison between bill length
countGreaterMale<- countGreaterMale+1  #increaing counter if true
}
else{
countGreaterFemale<-countGreaterFemale+1 #increasing counter if not true
}
}
}
#countGreaterMale #total times male penguins having more bill length
#countGreaterFemale #total times female penguins having more bill length
probmale<- countGreaterMale/(countGreaterMale+countGreaterFemale) #probability of males having more bill length than females.
print("Probability of males having more bill length than females.")
probmale
penguins_flipper_length_by_sex= my.penguins %>%
group_by(species,sex) %>%
summarise(bill_depth_mm= mean(bill_depth_mm),           #summarising
bill_length_mm= mean(bill_length_mm),         #on basis
flipper_length_mm=mean(flipper_length_mm),    #of mean
body_mass_g=mean(body_mass_g))
ggplot(penguins_flipper_length_by_sex, aes(x=sex, y=flipper_length_mm,fill=sex))+   #plotting flipper length with respect to sex
geom_col(position = position_dodge())
#splitting the dataset
my.penguins_male = my.penguins[my.penguins$sex == "male",] #male data set
my.penguins_female= my.penguins[my.penguins$sex == "female",] #female data set
#counter for comparison and calculating probability as if gone through vector space time complexity would be more
countGreaterMale<-0  #counter of male penguins having more flipper length
countGreaterFemale<-0 # counter for female penguins having more flipper length
# loop initiation for comparison
for (male in my.penguins_male$flipper_length_mm){ #outer loop for male
for (female in my.penguins_female$flipper_length_mm){ #nested loop for female as we have to consider all combinations
if (male>=female){                #comparison between flipper length
countGreaterMale<- countGreaterMale+1  #increaing counter if true
}
else{
countGreaterFemale<-countGreaterFemale+1 #increasing counter if not true
}
}
}
#countGreaterMale #total times male penguins having more flipper length
#countGreaterFemale #total times female penguins having more flipper length
probmale<- countGreaterMale/(countGreaterMale+countGreaterFemale) #probability of males having more flipper length than females.
print("probability of males having more flipper length than female:")
probmale
#splitting the dataset
my.penguins_male = my.penguins[my.penguins$sex == "male",] #male data set
my.penguins_female= my.penguins[my.penguins$sex == "female",] #female data set
#counter for comparison and calculating probability as if gone through vector space time complexity would be more
countGreaterMale<-0  #counter of male penguins having more bill depth
countGreaterFemale<-0 # counter for female penguins having more bill depth
# loop initiation for comparison
for (male in my.penguins_male$bill_depth_mm){ #outer loop for male
for (female in my.penguins_female$bill_depth_mm){ #nested loop for female as we have to consider all combinations
if (male>=female){                #comparison between bill depth
countGreaterMale<- countGreaterMale+1  #increaing counter if true
}
else{
countGreaterFemale<-countGreaterFemale+1 #increasing counter if not true
}
}
}
#splitting the dataset
my.penguins_male = my.penguins[my.penguins$sex == "male",] #male data set
my.penguins_female= my.penguins[my.penguins$sex == "female",] #female data set
#counter for comparison and calculating probability as if gone through vector space time complexity would be more
countGreaterMale<-0  #counter of male penguins having more bill depth
countGreaterFemale<-0 # counter for female penguins having more bill depth
# loop initiation for comparison
for (male in my.penguins_male$bill_depth_mm){ #outer loop for male
for (female in my.penguins_female$bill_depth_mm){ #nested loop for female as we have to consider all combinations
if (male>=female){                #comparison between bill depth
countGreaterMale<- countGreaterMale+1  #increaing counter if true
}
else{
countGreaterFemale<-countGreaterFemale+1 #increasing counter if not true
}
}
}
#splitting the dataset
my.penguins_male = my.penguins[my.penguins$sex == "male",] #male data set
my.penguins_female= my.penguins[my.penguins$sex == "female",] #female data set
#counter for comparison and calculating probability as if gone through vector space time complexity would be more
countGreaterWeightMale<-0  #counter of male penguins being heavier
countGreaterWeightFemale<-0 # counter for female penguins being heavier
# loop initiation for comparison
for (male in my.penguins_male$body_mass_g){ #outer loop for male
for (female in my.penguins_female$body_mass_g){ #nested loop for female as we have to consider all combinations
if (male>=female){                #comparison between weights
countGreaterWeightMale<- countGreaterWeightMale+1  #increaing counter if true
}
else{
countGreaterWeightFemale<-countGreaterWeightFemale+1 #increasing counter if not true
}
}
}
#countGreaterWeightMale #total times male penguins are heavier than females
#countGreaterWeightFemale #total times female penguins are heavier than males
prob<- countGreaterWeightMale/(countGreaterWeightMale+countGreaterWeightFemale) #probability of males heavier than females.
print("probability of males heavier than females:")
prob
setwd("~/documents")
#install.packages(ProjectTemplate)
library(ProjectTemplate)
setwd("~/documents")
getwd()
create.project("F2")
#install.packages(ProjectTemplate)
library(ProjectTemplate)
setwd("~/documents")
getwd()
create.project("EDA")
#install.packages(ProjectTemplate)
install.packages(dplyr)
#install.packages(ProjectTemplate)
install.packages("dplyr")
head(FutureLearn_MOOC_Dataset)
#install.packages(ProjectTemplate)
#install.packages("dplyr")
library(ProjectTemplate)
setwd("~/desktop")
getwd()
create.project("EDA")
load.project()
head(FutureLearn_MOOC_Dataset)
#install.packages(ProjectTemplate)
#install.packages("dplyr")
library(ProjectTemplate)
setwd("~/desktop")
getwd()
create.project("EDA")
load.project()
head("FutureLearn_MOOC_Dataset")
#install.packages(ProjectTemplate)
#install.packages("dplyr")
library(ProjectTemplate)
setwd("~/desktop")
getwd()
create.project("EDA")
load.project()
head("FutureLearn_MOOC_Dataset")
setwd("~/sahej eda/EDA")
#install.packages(ProjectTemplate)
#install.packages("dplyr")
library(ProjectTemplate)
setwd("~/sahej eda/EDA")
load.project()
